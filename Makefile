.PHONY: help up down restart logs ps clean setup-keycloak

help: ## Mostrar esta ajuda
	@echo "Jetski SaaS - Comandos Dispon√≠veis:"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

up: ## Subir todos os servi√ßos (PostgreSQL + Redis + Keycloak)
	@echo "üöÄ Subindo servi√ßos..."
	docker-compose up -d
	@echo "‚è≥ Aguardando Keycloak ficar pronto..."
	@bash infra/wait-for-keycloak.sh
	@echo "‚úÖ Servi√ßos rodando!"
	@echo ""
	@echo "üìç URLs:"
	@echo "   PostgreSQL: localhost:5432 (user: jetski, pass: dev123, db: jetski_dev)"
	@echo "   Redis:      localhost:6379"
	@echo "   Keycloak:   http://localhost:8080 (admin/admin)"
	@echo ""
	@echo "üîê Usu√°rios de teste:"
	@echo "   admin@acme.com / admin123 (ADMIN_TENANT, GERENTE)"
	@echo "   operador@acme.com / operador123 (OPERADOR)"

down: ## Parar todos os servi√ßos
	@echo "üõë Parando servi√ßos..."
	docker-compose down

restart: ## Reiniciar todos os servi√ßos
	@echo "üîÑ Reiniciando servi√ßos..."
	docker-compose restart

logs: ## Ver logs de todos os servi√ßos
	docker-compose logs -f

logs-api: ## Ver logs apenas da API (quando estiver rodando)
	docker-compose logs -f api

logs-keycloak: ## Ver logs do Keycloak
	docker-compose logs -f keycloak

logs-postgres: ## Ver logs do PostgreSQL
	docker-compose logs -f postgres

ps: ## Listar status dos servi√ßos
	docker-compose ps

clean: ## Parar e remover todos os containers e volumes (CUIDADO!)
	@echo "‚ö†Ô∏è  Isso vai remover TODOS os dados. Confirma? [y/N] " && read ans && [ $${ans:-N} = y ]
	docker-compose down -v
	@echo "üóëÔ∏è  Volumes removidos"

setup-keycloak: ## Configurar Keycloak com realm e usu√°rios
	@echo "üîß Configurando Keycloak..."
	@bash infra/setup-keycloak.sh
	@echo "‚úÖ Keycloak configurado!"

test-db: ## Testar conex√£o com PostgreSQL
	@echo "üîç Testando conex√£o com PostgreSQL..."
	docker-compose exec postgres psql -U jetski -d jetski_dev -c "SELECT version();"

test-redis: ## Testar conex√£o com Redis
	@echo "üîç Testando conex√£o com Redis..."
	docker-compose exec redis redis-cli ping

test-keycloak: ## Testar Keycloak health
	@echo "üîç Testando Keycloak..."
	@curl -f http://localhost:8080/health/ready && echo "‚úÖ Keycloak OK" || echo "‚ùå Keycloak n√£o est√° pronto"

test-all: test-db test-redis test-keycloak ## Testar todos os servi√ßos

shell-postgres: ## Abrir shell do PostgreSQL
	docker-compose exec postgres psql -U jetski -d jetski_dev

shell-redis: ## Abrir shell do Redis
	docker-compose exec redis redis-cli

backend-build: ## Build do backend (Maven)
	cd backend && mvn clean package -DskipTests

backend-test: ## Rodar testes do backend
	cd backend && mvn test

backend-run: ## Rodar backend localmente (requer servi√ßos up)
	cd backend && mvn spring-boot:run
