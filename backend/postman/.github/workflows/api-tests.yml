name: API Tests - Postman Collections

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - 'postman/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - 'postman/**'
  workflow_dispatch:
  schedule:
    # Run every day at 6 AM UTC
    - cron: '0 6 * * *'

env:
  NEWMAN_VERSION: 6.1.1

jobs:
  api-tests:
    name: Run Postman Collection Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: jetski_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      keycloak:
        image: quay.io/keycloak/keycloak:26.0
        env:
          KEYCLOAK_ADMIN: admin
          KEYCLOAK_ADMIN_PASSWORD: admin123
          KC_HTTP_PORT: 8080
        ports:
          - 8080:8080
        options: >-
          --health-cmd "curl -f http://localhost:8080/health/ready || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'backend/postman/package.json'

      - name: Install Newman and dependencies
        working-directory: backend/postman
        run: npm ci

      - name: Run database migrations
        working-directory: backend
        run: |
          mvn flyway:migrate \
            -Dflyway.url=jdbc:postgresql://localhost:5432/jetski_test \
            -Dflyway.user=postgres \
            -Dflyway.password=postgres

      - name: Start Spring Boot application
        working-directory: backend
        run: |
          SPRING_PROFILES_ACTIVE=local \
          mvn spring-boot:start \
            -Dspring-boot.run.fork=true \
            -DskipTests
        timeout-minutes: 5

      - name: Wait for application to be ready
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:8090/api/actuator/health; do sleep 3; done'

      - name: Configure Keycloak realm and users
        run: |
          # Wait for Keycloak
          timeout 60 bash -c 'until curl -f http://localhost:8080/health/ready; do sleep 3; done'

          # Run Keycloak setup script
          ./infra/keycloak-setup/setup-keycloak.sh
        working-directory: backend

      - name: Run Postman Collection - Full Suite
        working-directory: backend/postman
        run: npm run test:ci
        continue-on-error: false

      - name: Run RN01 Data-Driven Tests
        working-directory: backend/postman
        run: npm run test:rn01
        continue-on-error: false

      - name: Run Negative Tests (RBAC)
        working-directory: backend/postman
        run: npm run test:negative
        continue-on-error: false

      - name: Generate HTML Report
        if: always()
        working-directory: backend/postman
        run: npm run test:local

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postman-test-results
          path: |
            backend/postman/results/*.html
            backend/postman/results/*.json
            backend/postman/results/*.xml
          retention-days: 30

      - name: Publish Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: API Tests Report
          path: 'backend/postman/results/junit-report.xml'
          reporter: java-junit
          fail-on-error: true

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const resultsPath = 'backend/postman/results/test-results.json';

            if (fs.existsSync(resultsPath)) {
              const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
              const summary = results.run.stats;

              const comment = `## üß™ API Test Results

              **Postman Collection:** Jetski-Jornadas v2.3

              | Metric | Count |
              |--------|-------|
              | ‚úÖ Tests Passed | ${summary.tests.passed} |
              | ‚ùå Tests Failed | ${summary.tests.failed} |
              | ‚è≠Ô∏è Tests Skipped | ${summary.tests.skipped || 0} |
              | üìä Total Tests | ${summary.tests.total} |
              | üì° Requests | ${summary.requests.total} |
              | ‚è±Ô∏è Duration | ${(summary.duration / 1000).toFixed(2)}s |

              **Status:** ${summary.tests.failed === 0 ? '‚úÖ All tests passed!' : '‚ùå Some tests failed'}
              `;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

      - name: Stop Spring Boot application
        if: always()
        working-directory: backend
        run: mvn spring-boot:stop || true
